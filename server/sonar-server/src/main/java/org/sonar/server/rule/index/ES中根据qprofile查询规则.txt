1、在es中根据qprofile查询规则；

    1.1 在 ES 当中提供了 bool 查询，一个 bool 查询可以包含一个或多个查询字句，支持以下四种查询：
            must：必须匹配，贡献算分
            should：选择性匹配，贡献算分
            must_not：查询字句，必须不能匹配
            filter：必须匹配，不贡献算分

2、在db中根据qprofile查询有效规则；
SELECT
	a.id,
	a.profile_id AS "profileId",
	a.rule_id AS "ruleId",
	a.failure_level AS "severity",
	a.inheritance AS "inheritance",
	r.plugin_rule_key AS "rulefield",
	r.plugin_name AS "repository",
	rp.kee AS "ruleProfileUuid",
	a.created_at AS "createdAt",
	a.updated_at AS "updatedAt",
	oqp.organization_uuid AS "organizationUuid",
	oqp.uuid AS "profileUuid"
FROM
	active_rules a
	INNER JOIN rules_profiles rp ON rp.id = a.profile_id
	INNER JOIN org_qprofiles oqp ON oqp.rules_profile_uuid = rp.kee
	INNER JOIN rules r ON r.id = a.rule_id
	AND r.STATUS != 'REMOVED'
WHERE
	oqp.uuid = 'AX_Yn1E1xq3C8tijECgH'


3、获取加载插件的有效规则SQL逻辑
SELECT organization_uuid, qprofile_uuid, `language` FROM default_qprofiles where `language` in ('xoo', 'xoo2');
SELECT rules_profile_uuid FROM org_qprofiles WHERE uuid = 'AX_Yn1E1xq3C8tijECgH';  --uuid 对应 default_qprofiles.qprofile_uuid
SELECT id FROM rules_profiles WHERE kee = 'AX_Yn1Erxq3C8tijECgF'; --kee 对应 org_qprofiles.rules_profile_uuid
SELECT rule_id FROM active_rules where profile_id = 13;  -- profile_id 对应 rules_profiles.id
SELECT * FROM rules where id in (835,836);


4、在提交的数据
GET rules/rule/_search
{
  "from" : 0,
  "size" : 500,
  "query" : {
    "bool" : {
      "must" : [
        {
          "match_all" : {
            "boost" : 1.0
          }
        }
      ],
      "filter" : [
        {
          "bool" : {
            "must" : [
              {
                "terms" : {
                  "lang" : [
                    "xoo"
                  ],
                  "boost" : 1.0
                }
              },
              {
                "has_child" : {
                  "query" : {
                    "bool" : {
                      "must" : [
                        {
                          "term" : {
                            "ruleProfile" : {
                              "value" : "AX_Yn1Erxq3C8tijECgF",
                              "boost" : 1.0
                            }
                          }
                        }
                      ],
                      "disable_coord" : false,
                      "adjust_pure_negative" : true,
                      "boost" : 1.0
                    }
                  },
                  "type" : "activeRule",
                  "score_mode" : "none",
                  "min_children" : 0,
                  "max_children" : 2147483647,
                  "ignore_unmapped" : false,
                  "boost" : 1.0
                }
              },
              {
                "bool" : {
                  "must_not" : [
                    {
                      "term" : {
                        "status" : {
                          "value" : "REMOVED",
                          "boost" : 1.0
                        }
                      }
                    }
                  ],
                  "disable_coord" : false,
                  "adjust_pure_negative" : true,
                  "boost" : 1.0
                }
              }
            ],
            "disable_coord" : false,
            "adjust_pure_negative" : true,
            "boost" : 1.0
          }
        }
      ],
      "disable_coord" : false,
      "adjust_pure_negative" : true,
      "boost" : 1.0
    }
  },
  "sort" : [
    {
      "updatedAt" : {
        "order" : "desc"
      }
    },
    {
      "key.sortable_analyzer" : {
        "order" : "asc"
      }
    }
  ]
}