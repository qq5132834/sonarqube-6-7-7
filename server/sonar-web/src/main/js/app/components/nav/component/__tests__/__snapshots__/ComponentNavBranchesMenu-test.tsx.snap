// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders list 1`] = `
<div
  className="dropdown-menu"
>
  <div
    className="search-box menu-search"
  >
    <button
      className="search-box-submit button-clean"
    >
      <i
        className="icon-search-new"
      />
    </button>
    <input
      autoFocus={true}
      className="search-box-input"
      onChange={[Function]}
      onKeyDown={[Function]}
      placeholder="search_verb"
      type="search"
      value=""
    />
  </div>
  <ul
    className="menu menu-vertically-limited"
  >
    <ComponentNavBranchesMenuItem
      branch={
        Object {
          "isMain": true,
          "name": "master",
        }
      }
      component={
        Object {
          "key": "component",
        }
      }
      onSelect={[Function]}
      selected={true}
    />
    <li
      className="divider"
    />
    <li
      className="dropdown-header"
    >
      branches.orphan_branches
      <Tooltip
        overlay="branches.orphan_branches.tooltip"
        placement="bottom"
      >
        <i
          className="icon-help spacer-left"
        />
      </Tooltip>
    </li>
    <ComponentNavBranchesMenuItem
      branch={
        Object {
          "isMain": false,
          "isOrphan": true,
          "mergeBranch": "master",
          "name": "baz",
          "status": Object {
            "bugs": 0,
            "codeSmells": 0,
            "vulnerabilities": 0,
          },
          "type": "SHORT",
        }
      }
      component={
        Object {
          "key": "component",
        }
      }
      onSelect={[Function]}
      selected={false}
    />
    <ComponentNavBranchesMenuItem
      branch={
        Object {
          "isMain": false,
          "isOrphan": undefined,
          "mergeBranch": "master",
          "name": "foo",
          "status": Object {
            "bugs": 0,
            "codeSmells": 0,
            "vulnerabilities": 0,
          },
          "type": "SHORT",
        }
      }
      component={
        Object {
          "key": "component",
        }
      }
      onSelect={[Function]}
      selected={false}
    />
    <li
      className="divider"
    />
    <ComponentNavBranchesMenuItem
      branch={
        Object {
          "isMain": false,
          "name": "bar",
          "type": "LONG",
        }
      }
      component={
        Object {
          "key": "component",
        }
      }
      onSelect={[Function]}
      selected={false}
    />
    <li
      className="divider"
    />
    <li
      className="dropdown-header"
    >
      branches.orphan_branches
      <Tooltip
        overlay="branches.orphan_branches.tooltip"
        placement="bottom"
      >
        <i
          className="icon-help spacer-left"
        />
      </Tooltip>
    </li>
    <ComponentNavBranchesMenuItem
      branch={
        Object {
          "isMain": false,
          "isOrphan": true,
          "mergeBranch": "master",
          "name": "baz",
          "status": Object {
            "bugs": 0,
            "codeSmells": 0,
            "vulnerabilities": 0,
          },
          "type": "SHORT",
        }
      }
      component={
        Object {
          "key": "component",
        }
      }
      onSelect={[Function]}
      selected={false}
    />
  </ul>
</div>
`;

exports[`searches 1`] = `
<div
  className="dropdown-menu"
>
  <div
    className="search-box menu-search"
  >
    <button
      className="search-box-submit button-clean"
    >
      <i
        className="icon-search-new"
      />
    </button>
    <input
      autoFocus={true}
      className="search-box-input"
      onChange={[Function]}
      onKeyDown={[Function]}
      placeholder="search_verb"
      type="search"
      value="bar"
    />
  </div>
  <ul
    className="menu menu-vertically-limited"
  >
    <ComponentNavBranchesMenuItem
      branch={
        Object {
          "isMain": false,
          "isOrphan": undefined,
          "mergeBranch": "master",
          "name": "foobar",
          "status": Object {
            "bugs": 0,
            "codeSmells": 0,
            "vulnerabilities": 0,
          },
          "type": "SHORT",
        }
      }
      component={
        Object {
          "key": "component",
        }
      }
      onSelect={[Function]}
      selected={true}
    />
    <li
      className="divider"
    />
    <ComponentNavBranchesMenuItem
      branch={
        Object {
          "isMain": false,
          "name": "bar",
          "type": "LONG",
        }
      }
      component={
        Object {
          "key": "component",
        }
      }
      onSelect={[Function]}
      selected={false}
    />
  </ul>
</div>
`;
